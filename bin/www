#!/usr/bin/env node
require("module-alias/register");
const app = require("@root/app");
const debug = require("debug")("server:main");
const http = require("http");
const https = require("https");
const sslify = require("koa-sslify").default;
const config = require("@root/config");

const port = config.port || 3000;

const server = http.createServer(app.callback());

server.listen(port, () => {
  console.log("server is starting at port " + port);
});
if (config.env === "production") {
  app.use(sslify());
  https.createServer(config.https, app.callback()).listen(443, () => {
    console.log("https server is starting at port 443");
  });
}
server.on("error", onError);
server.on("listening", onListening);

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
